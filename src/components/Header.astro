---
import Navigation from '../components/Navigation.astro'
import LanguagePicker from '../components/LanguagePicker.astro'
import { DarkMode, SkipLink } from 'accessible-astro-components'
import { Icon } from 'astro-icon/components'
import { getTranslationsFromUrl, getTranslation } from '../utils/useTranslation.js'

// Get translations for current language
const translations = await getTranslationsFromUrl(Astro.url.pathname)
const t = (key: string, fallback = '') => {
  return getTranslation(translations, key, {}, fallback)
}
---

<header>
  <SkipLink />
  <Navigation>
    <li class="menu-item">
      <a href="/">{t('navigation.home')}</a>
    </li>
    <li class="menu-item">
      <a href="#how-it-works">{t('navigation.howItWorks')}</a>
    </li>
    <li class="menu-item">
      <a href="#pricing">{t('navigation.pricing')}</a>
    </li>
    <li class="menu-item has-dropdown">
      <button aria-haspopup="true" aria-expanded="false">
        More
        <Icon name="lucide:chevron-down" size="32" />
      </button>
      <ul class="dropdown-menu">
        <li class="submenu-item">
          <a href="/accessibility-statement">{t('navigation.privacy')}</a>
        </li>
        <li class="submenu-item">
          <a href="/accessible-components">Components</a>
        </li>
        <li class="submenu-item">
          <a href="/color-contrast-checker">Color Checker</a>
        </li>
        <li class="submenu-item">
          <a href="/404-page">404 page</a>
        </li>
      </ul>
    </li>
    <li class="menu-item highlight">
      <a href="#early-access">{t('navigation.joinEarlyAccess')}</a>
    </li>
    <li class="menu-item type-icon">
      <LanguagePicker variant="toggle" />
    </li>
    <li class="menu-item type-icon animate-rotate">
      <DarkMode>
        <Icon name="lucide:moon" slot="light" />
        <Icon name="lucide:sun" slot="dark" />
      </DarkMode>
    </li>
  </Navigation>
</header>

<style lang="scss" is:global>
  header {
    .type-icon {
      display: block;
      margin-inline: -7px;

      svg {
        inline-size: 30px;
        block-size: 30px;
      }

      // Special styling for language picker
      .language-toggle {
        margin-inline: 0;
      }

      .language-toggle-link {
        transition: background-color var(--animation-speed-fast) var(--cubic-bezier);
        border-radius: var(--radius-s);
        padding: var(--space-3xs);

        &:hover {
          background-color: var(--border-color-subtle);
        }
      }
    }
  }
</style>
