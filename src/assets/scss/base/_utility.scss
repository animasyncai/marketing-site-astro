@use 'breakpoint'as *;

.container {
  margin-inline: auto;
  padding-inline: var(--grid-gutter);
  max-width: var(--grid-max-width);

  @include breakpoint(m) {
    padding-inline: 2rem;
  }

  @include breakpoint(xl) {
    padding-inline: calc(2rem / 2);
    max-width: 1200px;
  }

  &.stretch {
    max-width: 100%;
  }

  &.narrow {
    max-width: 800px;
  }
}

.center-content {
  display: grid;
  place-items: center;
}

.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.horizontal-center {
  margin: 0 auto;
}

.h-stack {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  gap: var(--space-s);
}

.v-stack {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: var(--space-s);
}

.space-between {
  justify-content: space-between;
}

.align-start {
  align-items: flex-start;
}

.align-stretch {
  align-items: stretch;
}

.align-center {
  align-items: center;
}

.align-end {
  align-items: flex-end;
}

.wrap {
  flex-wrap: wrap;
}

.no-gap {
  gap: 0;
}

.truncate {
  overflow: clip;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-ellipsis {
  display: -webkit-box;
  -webkit-line-clamp: var(--line-clamp);
  -webkit-box-orient: vertical;
  overflow: clip;
}

.uppercase {
  text-transform: uppercase;
}

.sr-only {
  position: absolute;
  overflow: clip;
  clip: rect(0 0 0 0);
  margin: 0;
  border: 0;
  padding: 0;
  inline-size: 1px;
  block-size: auto;
  white-space: nowrap;
}

$space-map: (3xs: var(--space-3xs),
  2xs: var(--space-2xs),
  xs: var(--space-xs),
  s: var(--space-s),
  m: var(--space-m),
  l: var(--space-l),
  xl: var(--space-xl),
);

@each $size,
$value in $space-map {
  .space-content-#{$size}>*+* {
    margin-block-start: $value;
  }
}

$gap-map: (3xs: var(--space-3xs),
  2xs: var(--space-2xs),
  xs: var(--space-xs),
  s: var(--space-s),
  m: var(--space-m),
  l: var(--space-l),
  xl: var(--space-xl),
);

@each $size,
$value in $space-map {
  .gap-#{$size} {
    gap: $value;
  }
}

$font-map: (-2: (font-size: var(--font-size--2),
    line-height: var(--font-size--2),
  ),
  -1: (font-size: var(--font-size--1),
    line-height: var(--font-size--1),
  ),
  0: (font-size: var(--font-size-0),
    line-height: var(--font-size-0),
  ),
  1: (font-size: var(--font-size-1),
    line-height: var(--font-size-1),
  ),
  2: (font-size: var(--font-size-2),
    line-height: var(--font-size-2),
  ),
  3: (font-size: var(--font-size-3),
    line-height: var(--font-size-3),
  ),
  4: (font-size: var(--font-size-4),
    line-height: var(--font-size-4),
  ),
  5: (font-size: var(--font-size-5),
    line-height: var(--font-size-5),
  ),
  6: (font-size: var(--font-size-6),
    line-height: var(--font-size-6),
  ));

@each $size,
$value in $font-map {
  .font-#{$size} {
    font-size: map-get($value, font-size);
    line-height: map-get($value, line-height);
  }
}

.space-content {

  >*+*,
  >dl>*+* {
    margin-block-start: var(--space-s);
    margin-block-end: 0;
  }

  >h2 {
    margin-block-start: var(--space-l);

    @include breakpoint(xl) {
      margin-block-start: var(--space-xl);
    }
  }

  >h3 {
    margin-block-start: var(--space-m);

    @include breakpoint(xl) {
      margin-block-start: var(--space-l);
    }
  }

  >h4 {
    margin-block-start: var(--space-s);

    @include breakpoint(xl) {
      margin-block-start: var(--space-m);
    }
  }

  >h5,
  >h6 {
    margin-block-start: var(--space-xs);

    @include breakpoint(xl) {
      margin-block-start: var(--space-s);
    }
  }

  >*:first-child {
    margin-block-start: 0;
  }
}

// Text content utility for rich text formatting
.text-content {
  color: var(--color-text-primary);
  line-height: 1.7;
  font-size: var(--font-size-0);

  // Headings
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: var(--color-text-primary);
    font-weight: 600;
    line-height: 1.3;
    margin-block-start: 0;
    margin-block-end: 0;
  }

  h1 {
    font-size: var(--font-size-5);
    margin-block-end: var(--space-m);

    @include breakpoint(m) {
      font-size: var(--font-size-6);
    }
  }

  h2 {
    font-size: var(--font-size-4);
    margin-block-start: var(--space-xl);
    margin-block-end: var(--space-m);

    @include breakpoint(m) {
      font-size: var(--font-size-5);
    }
  }

  h3 {
    font-size: var(--font-size-3);
    margin-block-start: var(--space-l);
    margin-block-end: var(--space-s);

    @include breakpoint(m) {
      font-size: var(--font-size-4);
    }
  }

  h4 {
    font-size: var(--font-size-2);
    margin-block-start: var(--space-m);
    margin-block-end: var(--space-xs);

    @include breakpoint(m) {
      font-size: var(--font-size-3);
    }
  }

  h5,
  h6 {
    font-size: var(--font-size-1);
    margin-block-start: var(--space-s);
    margin-block-end: var(--space-xs);

    @include breakpoint(m) {
      font-size: var(--font-size-2);
    }
  }

  // Paragraphs
  p {
    margin-block-start: 0;
    margin-block-end: var(--space-m);
    line-height: 1.7;
  }

  // Lists
  ul,
  ol {
    margin-block-start: 0;
    margin-block-end: var(--space-m);
    padding-inline-start: var(--space-m);
  }

  ul {
    list-style-type: disc;
    list-style-position: outside;
  }

  ol {
    list-style-type: decimal;
    list-style-position: outside;
  }

  li {
    margin-block-end: var(--space-xs);
    line-height: 1.6;

    &:last-child {
      margin-block-end: 0;
    }
  }

  // Nested lists
  ul ul,
  ol ol,
  ul ol,
  ol ul {
    margin-block-start: var(--space-xs);
    margin-block-end: 0;
  }

  // Nested list styles
  ul ul {
    list-style-type: circle;
  }

  ul ul ul {
    list-style-type: square;
  }

  // Links
  a {
    color: var(--color-primary-600);
    text-decoration: underline;
    text-decoration-thickness: 1px;
    text-underline-offset: 2px;
    transition: color 0.2s ease;

    &:hover {
      color: var(--color-primary-700);
      text-decoration-thickness: 2px;
    }

    &:focus {
      outline: 2px solid var(--color-primary-500);
      outline-offset: 2px;
      border-radius: 2px;
    }
  }

  // Strong/Bold text
  strong,
  b {
    font-weight: 600;
    color: var(--color-text-primary);
  }

  // Emphasis
  em,
  i {
    font-style: italic;
  }

  // Horizontal rules
  hr {
    border: none;
    border-top: 1px solid var(--color-border);
    margin-block-start: var(--space-xl);
    margin-block-end: var(--space-xl);
  }

  // Blockquotes
  blockquote {
    border-inline-start: 4px solid var(--color-primary-200);
    padding-inline-start: var(--space-m);
    margin-block-start: var(--space-m);
    margin-block-end: var(--space-m);
    font-style: italic;
    color: var(--color-text-secondary);
  }

  // Code
  code {
    background-color: var(--color-gray-100);
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
    font-size: 0.875em;
  }

  pre {
    background-color: var(--color-gray-100);
    padding: var(--space-m);
    border-radius: 0.5rem;
    overflow-x: auto;
    margin-block-start: var(--space-m);
    margin-block-end: var(--space-m);

    code {
      background: none;
      padding: 0;
    }
  }

  // Tables
  table {
    width: 100%;
    border-collapse: collapse;
    margin-block-start: var(--space-m);
    margin-block-end: var(--space-m);
  }

  th,
  td {
    padding: var(--space-s) var(--space-m);
    text-align: left;
    border-bottom: 1px solid var(--color-border);
  }

  th {
    font-weight: 600;
    background-color: var(--color-gray-50);
  }

  // First child reset
  >*:first-child {
    margin-block-start: 0;
  }

  // Last child reset
  >*:last-child {
    margin-block-end: 0;
  }

  // Responsive adjustments
  @include breakpoint(s) {
    font-size: var(--font-size--1);

    h1 {
      font-size: var(--font-size-4);
    }

    h2 {
      font-size: var(--font-size-3);
    }

    h3 {
      font-size: var(--font-size-2);
    }

    h4 {
      font-size: var(--font-size-1);
    }

    h5,
    h6 {
      font-size: var(--font-size-0);
    }
  }
}